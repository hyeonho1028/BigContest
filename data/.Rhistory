sqrt(mean((test$전국관객수-pred)**2))
# randomForest
dat_score_sel = dat_score %>% group_by() %>% select(개봉월, 국적, 전국스크린수, 전국관객수, 별점,
감독점수, 제작사점수, 수입사점수, 배우1점수, 배우2점수, 배우3점수)
dat_score_sel$개봉월 = as.factor(dat_score_sel$개봉월)
dat_score_sel$국적 = as.factor(dat_score_sel$국적)
ind = sample(1:nrow(dat_score_sel), floor(.75*nrow(dat_score_sel)), replace = F)
train = dat_score_sel[ind,]
test = dat_score_sel[-ind,]
model = randomForest::randomForest(전국관객수~., train, ntree = 200)
pred = predict(model, test)
sqrt(mean((test$전국관객수-pred)**2))
# randomForest
dat_score_sel = dat_score %>% group_by() %>% select(개봉월, 국적, 전국스크린수, 전국관객수, 별점,
감독점수, 제작사점수, 수입사점수, 배우1점수, 배우2점수, 배우3점수)
dat_score_sel$개봉월 = as.factor(dat_score_sel$개봉월)
dat_score_sel$국적 = as.factor(dat_score_sel$국적)
ind = sample(1:nrow(dat_score_sel), floor(.75*nrow(dat_score_sel)), replace = F)
train = dat_score_sel[ind,]
test = dat_score_sel[-ind,]
model = randomForest::randomForest(전국관객수~., train, ntree = 100)
pred = predict(model, test)
sqrt(mean((test$전국관객수-pred)**2))
# randomForest
dat_score_sel = dat_score %>% group_by() %>% select(개봉월, 국적, 전국스크린수, 전국관객수, 별점,
감독점수, 제작사점수, 수입사점수, 배우1점수, 배우2점수, 배우3점수)
dat_score_sel$개봉월 = as.factor(dat_score_sel$개봉월)
dat_score_sel$국적 = as.factor(dat_score_sel$국적)
ind = sample(1:nrow(dat_score_sel), floor(.75*nrow(dat_score_sel)), replace = F)
train = dat_score_sel[ind,]
test = dat_score_sel[-ind,]
model = randomForest::randomForest(전국관객수~., train, ntree = 50)
pred = predict(model, test)
sqrt(mean((test$전국관객수-pred)**2))
# randomForest
dat_score_sel = dat_score %>% group_by() %>% select(개봉월, 국적, 전국스크린수, 전국관객수, 별점,
감독점수, 제작사점수, 수입사점수, 배우1점수, 배우2점수, 배우3점수)
dat_score_sel$개봉월 = as.factor(dat_score_sel$개봉월)
dat_score_sel$국적 = as.factor(dat_score_sel$국적)
ind = sample(1:nrow(dat_score_sel), floor(.75*nrow(dat_score_sel)), replace = F)
train = dat_score_sel[ind,]
test = dat_score_sel[-ind,]
model = randomForest::randomForest(전국관객수~., train, ntree = 150)
pred = predict(model, test)
sqrt(mean((test$전국관객수-pred)**2))
dat_score_sel = dat_score %>% group_by() %>% select(개봉월, 국적, 전국스크린수, 전국관객수, 별점,
감독점수, 제작사점수, 수입사점수, 배우1점수, 배우2점수, 배우3점수)
dat_score_sel$개봉월 = as.factor(dat_score_sel$개봉월)
dat_score_sel$국적 = as.factor(dat_score_sel$국적)
ind = sample(1:nrow(dat_score_sel), floor(.75*nrow(dat_score_sel)), replace = F)
train = dat_score_sel[ind,]
test = dat_score_sel[-ind,]
model = lm(전국관객수~., train)
summary(model)
pred = predict(model, test)
sqrt(mean((test$전국관객수-pred)**2))
ind = sample(1:nrow(dat_score_sel), floor(.75*nrow(dat_score_sel)), replace = F)
train = dat_score_sel[ind,]
test = dat_score_sel[-ind,]
model = lm(전국관객수~., train)
pred = predict(model, test)
sqrt(mean((test$전국관객수-pred)**2))
ind = sample(1:nrow(dat_score_sel), floor(.75*nrow(dat_score_sel)), replace = F)
train = dat_score_sel[ind,]
test = dat_score_sel[-ind,]
model = lm(전국관객수~., train)
pred = predict(model, test)
sqrt(mean((test$전국관객수-pred)**2))
ind = sample(1:nrow(dat_score_sel), floor(.75*nrow(dat_score_sel)), replace = F)
train = dat_score_sel[ind,]
test = dat_score_sel[-ind,]
model = lm(전국관객수~., train)
pred = predict(model, test)
sqrt(mean((test$전국관객수-pred)**2))
ind = sample(1:nrow(dat_score_sel), floor(.75*nrow(dat_score_sel)), replace = F)
train = dat_score_sel[ind,]
test = dat_score_sel[-ind,]
model = lm(전국관객수~., train)
pred = predict(model, test)
sqrt(mean((test$전국관객수-pred)**2))
ind = sample(1:nrow(dat_score_sel), floor(.75*nrow(dat_score_sel)), replace = F)
train = dat_score_sel[ind,]
test = dat_score_sel[-ind,]
model = lm(전국관객수~., train)
pred = predict(model, test)
sqrt(mean((test$전국관객수-pred)**2))
ind = sample(1:nrow(dat_score_sel), floor(.75*nrow(dat_score_sel)), replace = F)
train = dat_score_sel[ind,]
test = dat_score_sel[-ind,]
model = lm(전국관객수~., train)
pred = predict(model, test)
sqrt(mean((test$전국관객수-pred)**2))
ind = sample(1:nrow(dat_score_sel), floor(.75*nrow(dat_score_sel)), replace = F)
train = dat_score_sel[ind,]
test = dat_score_sel[-ind,]
model = lm(전국관객수~., train)
pred = predict(model, test)
sqrt(mean((test$전국관객수-pred)**2))
ind = sample(1:nrow(dat_score_sel), floor(.75*nrow(dat_score_sel)), replace = F)
train = dat_score_sel[ind,]
test = dat_score_sel[-ind,]
model = lm(전국관객수~., train)
pred = predict(model, test)
sqrt(mean((test$전국관객수-pred)**2))
ind = sample(1:nrow(dat_score_sel), floor(.75*nrow(dat_score_sel)), replace = F)
train = dat_score_sel[ind,]
test = dat_score_sel[-ind,]
model = lm(전국관객수~., train)
pred = predict(model, test)
sqrt(mean((test$전국관객수-pred)**2))
ind = sample(1:nrow(dat_score_sel), floor(.75*nrow(dat_score_sel)), replace = F)
train = dat_score_sel[ind,]
test = dat_score_sel[-ind,]
model = lm(전국관객수~., train)
pred = predict(model, test)
sqrt(mean((test$전국관객수-pred)**2))
plot(test$전국관객수, test$전국스크린수)
plot(dat_score_sel$전국관객수, dat_score_sel$전국스크린수)
plot(dat_score_sel$전국관객수, dat_score_sel$별점)
plot(dat_score_sel$별점,dat_score_sel$전국관객수)
dat_score_sel
cor(dat_score_sel[,-(1:2)]
cor(dat_score_sel[,-(1:2)])
cor(dat_score_sel[,-(1:2)])
summary(model)
dat = read.csv('C:/workspace/Github/big_contest/data/final_data.csv', stringsAsFactors = F)
dat_score = dat %>% group_by(감독) %>% mutate(감독점수 = mean(전국관객수))
dat_score = dat_score %>% group_by(제작사) %>% mutate(제작사점수 = mean(전국관객수))
dat_score = dat_score %>% group_by(수입사) %>% mutate(수입사점수 = mean(전국관객수))
dat_score = dat_score %>% group_by(배우1) %>% mutate(배우1점수 = mean(전국관객수))
dat_score = dat_score %>% group_by(배우2) %>% mutate(배우2점수 = mean(전국관객수))
dat_score = dat_score %>% group_by(배우3) %>% mutate(배우3점수 = mean(전국관객수))
dat_score$국적[dat_score$국적 != '한국' & dat_score$국적 != '미국'] = '3국'
write.csv(dat, 'movie_data.csv', row.names = F)
write.csv(dat, 'C:/workspace/Github/big_contest/data/movie_data.csv', row.names = F)
write.csv(dat_score, 'C:/workspace/Github/big_contest/data/movie_data.csv', row.names = F)
write.csv(dat_score, 'C:/workspace/Github/big_contest/data/movie_data.csv', row.names = F)
dat_score_sel = dat_score %>% group_by() %>% select(개봉월, 국적, 전국스크린수, 전국관객수, 별점,
감독점수, 제작사점수, 수입사점수, 배우1점수, 배우2점수, 배우3점수)
dat_score_sel$개봉월 = as.factor(dat_score_sel$개봉월)
ind = sample(1:nrow(dat_score_sel), floor(.75*nrow(dat_score_sel)), replace = F)
train = dat_score_sel[ind,]
test = dat_score_sel[-ind,]
model = lm(전국관객수~., train)
pred = predict(model, test)
sqrt(mean((test$전국관객수-pred)**2))
summary(model)
# randomForest
dat_score_sel = dat_score %>% group_by() %>% select(개봉월, 국적, 전국스크린수, 전국관객수, 별점,
감독점수, 제작사점수, 수입사점수, 배우1점수, 배우2점수, 배우3점수)
dat_score_sel$개봉월 = as.factor(dat_score_sel$개봉월)
dat_score_sel$국적 = as.factor(dat_score_sel$국적)
ind = sample(1:nrow(dat_score_sel), floor(.75*nrow(dat_score_sel)), replace = F)
train = dat_score_sel[ind,]
test = dat_score_sel[-ind,]
model = randomForest::randomForest(전국관객수~., train, ntree = 150)
pred = predict(model, test)
sqrt(mean((test$전국관객수-pred)**2))
# randomForest
dat_score_sel = dat_score %>% group_by() %>% select(개봉월, 국적, 전국스크린수, 전국관객수, 별점,
감독점수, 제작사점수, 수입사점수, 배우1점수, 배우2점수, 배우3점수)
dat_score_sel$개봉월 = as.factor(dat_score_sel$개봉월)
dat_score_sel$국적 = as.factor(dat_score_sel$국적)
ind = sample(1:nrow(dat_score_sel), floor(.75*nrow(dat_score_sel)), replace = F)
train = dat_score_sel[ind,]
test = dat_score_sel[-ind,]
model = randomForest::randomForest(전국관객수~., train, ntree = 150)
pred = predict(model, test)
sqrt(mean((test$전국관객수-pred)**2))
# randomForest
dat_score_sel = dat_score %>% group_by() %>% select(개봉월, 국적, 전국스크린수, 전국관객수, 별점,
감독점수, 제작사점수, 수입사점수, 배우1점수, 배우2점수, 배우3점수)
dat_score_sel$개봉월 = as.factor(dat_score_sel$개봉월)
dat_score_sel$국적 = as.factor(dat_score_sel$국적)
ind = sample(1:nrow(dat_score_sel), floor(.75*nrow(dat_score_sel)), replace = F)
train = dat_score_sel[ind,]
test = dat_score_sel[-ind,]
model = randomForest::randomForest(전국관객수~., train, ntree = 200)
pred = predict(model, test)
sqrt(mean((test$전국관객수-pred)**2))
# randomForest
dat_score_sel = dat_score %>% group_by() %>% select(개봉월, 국적, 전국스크린수, 전국관객수, 별점,
감독점수, 제작사점수, 수입사점수, 배우1점수, 배우2점수, 배우3점수)
dat_score_sel$개봉월 = as.factor(dat_score_sel$개봉월)
dat_score_sel$국적 = as.factor(dat_score_sel$국적)
ind = sample(1:nrow(dat_score_sel), floor(.75*nrow(dat_score_sel)), replace = F)
train = dat_score_sel[ind,]
test = dat_score_sel[-ind,]
model = randomForest::randomForest(전국관객수~., train, ntree = 100)
pred = predict(model, test)
sqrt(mean((test$전국관객수-pred)**2))
# randomForest
dat_score_sel = dat_score %>% group_by() %>% select(개봉월, 국적, 전국스크린수, 전국관객수, 별점,
감독점수, 제작사점수, 수입사점수, 배우1점수, 배우2점수, 배우3점수)
dat_score_sel$개봉월 = as.factor(dat_score_sel$개봉월)
dat_score_sel$국적 = as.factor(dat_score_sel$국적)
ind = sample(1:nrow(dat_score_sel), floor(.75*nrow(dat_score_sel)), replace = F)
train = dat_score_sel[ind,]
test = dat_score_sel[-ind,]
model = randomForest::randomForest(전국관객수~., train, ntree = 50)
pred = predict(model, test)
sqrt(mean((test$전국관객수-pred)**2))
# randomForest
dat_score_sel = dat_score %>% group_by() %>% select(개봉월, 국적, 전국스크린수, 전국관객수, 별점,
감독점수, 제작사점수, 수입사점수, 배우1점수, 배우2점수, 배우3점수)
dat_score_sel$개봉월 = as.factor(dat_score_sel$개봉월)
dat_score_sel$국적 = as.factor(dat_score_sel$국적)
ind = sample(1:nrow(dat_score_sel), floor(.75*nrow(dat_score_sel)), replace = F)
train = dat_score_sel[ind,]
test = dat_score_sel[-ind,]
model = randomForest::randomForest(전국관객수~., train, ntree = 70)
pred = predict(model, test)
sqrt(mean((test$전국관객수-pred)**2))
# randomForest
dat_score_sel = dat_score %>% group_by() %>% select(개봉월, 국적, 전국스크린수, 전국관객수, 별점,
감독점수, 제작사점수, 수입사점수, 배우1점수, 배우2점수, 배우3점수)
dat_score_sel$개봉월 = as.factor(dat_score_sel$개봉월)
dat_score_sel$국적 = as.factor(dat_score_sel$국적)
ind = sample(1:nrow(dat_score_sel), floor(.75*nrow(dat_score_sel)), replace = F)
train = dat_score_sel[ind,]
test = dat_score_sel[-ind,]
model = randomForest::randomForest(전국관객수~., train, ntree = 80)
pred = predict(model, test)
sqrt(mean((test$전국관객수-pred)**2))
# randomForest
dat_score_sel = dat_score %>% group_by() %>% select(개봉월, 국적, 전국스크린수, 전국관객수, 별점,
감독점수, 제작사점수, 수입사점수, 배우1점수, 배우2점수, 배우3점수)
dat_score_sel$개봉월 = as.factor(dat_score_sel$개봉월)
dat_score_sel$국적 = as.factor(dat_score_sel$국적)
ind = sample(1:nrow(dat_score_sel), floor(.75*nrow(dat_score_sel)), replace = F)
train = dat_score_sel[ind,]
test = dat_score_sel[-ind,]
model = randomForest::randomForest(전국관객수~., train, ntree = 70)
pred = predict(model, test)
sqrt(mean((test$전국관객수-pred)**2))
# randomForest
dat_score_sel = dat_score %>% group_by() %>% select(개봉월, 국적, 전국스크린수, 전국관객수, 별점,
감독점수, 제작사점수, 수입사점수, 배우1점수, 배우2점수, 배우3점수)
dat_score_sel$개봉월 = as.factor(dat_score_sel$개봉월)
dat_score_sel$국적 = as.factor(dat_score_sel$국적)
ind = sample(1:nrow(dat_score_sel), floor(.75*nrow(dat_score_sel)), replace = F)
train = dat_score_sel[ind,]
test = dat_score_sel[-ind,]
model = randomForest::randomForest(전국관객수~., train, ntree = 100)
pred = predict(model, test)
sqrt(mean((test$전국관객수-pred)**2))
# randomForest
dat_score_sel = dat_score %>% group_by() %>% select(개봉월, 국적, 전국스크린수, 전국관객수, 별점,
감독점수, 제작사점수, 수입사점수, 배우1점수, 배우2점수, 배우3점수)
dat_score_sel$개봉월 = as.factor(dat_score_sel$개봉월)
dat_score_sel$국적 = as.factor(dat_score_sel$국적)
ind = sample(1:nrow(dat_score_sel), floor(.75*nrow(dat_score_sel)), replace = F)
train = dat_score_sel[ind,]
test = dat_score_sel[-ind,]
model = randomForest::randomForest(전국관객수~., train, ntree = 100)
pred = predict(model, test)
sqrt(mean((test$전국관객수-pred)**2))
cv.out$lambda.min
# ridge regression
library(glmnet)
cv.out = cv.glmnet(model.matrix(전국관객수~., train)[,-1], train$전국관객수, alpha=0)
plot(cv.out)
cv.out$lambda.min
# ridge regression
library(glmnet)
cv.out = cv.glmnet(model.matrix(전국관객수~., train)[,-1], train$전국관객수, alpha=0)
plot(cv.out)
cv.out$lambda.min
grid = 10^seq(10,-2,length=100)
model = glmnet(train_x, train_y, alpha = 0, lambda = grid)
model = glmnet(model.matrix(전국관객수~., train)[,-1], train$전국관객수, alpha = 0, lambda = grid)
pred = predict(model, newx = test_x, s = cv.out$lambda.min)
pred = predict(model, newx = test, s = cv.out$lambda.min)
pred = predict(model, newx = model.matrix(전국관객수~., test)[,-1], s = cv.out$lambda.min)
test = cbind(data.frame(test_y), data.frame(pred))
sqrt(mean((test$전국관객수-pred)**2))
# ridge regression
library(glmnet)
cv.out = cv.glmnet(model.matrix(전국관객수~., train)[,-1], train$전국관객수, alpha=0)
plot(cv.out)
cv.out$lambda.min
grid = 10^seq(10,-2,length=100)
model = glmnet(model.matrix(전국관객수~., train)[,-1], train$전국관객수, alpha = 0, lambda = grid)
pred = predict(model, newx = model.matrix(전국관객수~., test)[,-1], s = cv.out$lambda.min)
sqrt(mean((test$전국관객수-pred)**2))
# ridge regression
library(glmnet)
dat_score_sel = dat_score %>% group_by() %>% select(개봉월, 국적, 전국스크린수, 전국관객수, 별점,
감독점수, 제작사점수, 수입사점수, 배우1점수, 배우2점수, 배우3점수)
dat_score_sel$개봉월 = as.factor(dat_score_sel$개봉월)
dat_score_sel$국적 = as.factor(dat_score_sel$국적)
cv.out = cv.glmnet(model.matrix(전국관객수~., train)[,-1], train$전국관객수, alpha=0)
plot(cv.out)
cv.out$lambda.min
grid = 10^seq(10,-2,length=100)
model = glmnet(model.matrix(전국관객수~., train)[,-1], train$전국관객수, alpha = 0, lambda = grid)
pred = predict(model, newx = model.matrix(전국관객수~., test)[,-1], s = cv.out$lambda.min)
sqrt(mean((test$전국관객수-pred)**2))
# ridge regression
library(glmnet)
dat_score_sel = dat_score %>% group_by() %>% select(개봉월, 국적, 전국스크린수, 전국관객수, 별점,
감독점수, 제작사점수, 수입사점수, 배우1점수, 배우2점수, 배우3점수)
dat_score_sel$개봉월 = as.factor(dat_score_sel$개봉월)
dat_score_sel$국적 = as.factor(dat_score_sel$국적)
cv.out = cv.glmnet(model.matrix(전국관객수~., train)[,-1], train$전국관객수, alpha=0)
plot(cv.out)
cv.out$lambda.min
grid = 10^seq(10,-2,length=100)
model = glmnet(model.matrix(전국관객수~., train)[,-1], train$전국관객수, alpha = 0, lambda = grid)
pred = predict(model, newx = model.matrix(전국관객수~., test)[,-1], s = cv.out$lambda.min)
sqrt(mean((test$전국관객수-pred)**2))
# lasso regression
library(glmnet)
dat_score_sel = dat_score %>% group_by() %>% select(개봉월, 국적, 전국스크린수, 전국관객수, 별점,
감독점수, 제작사점수, 수입사점수, 배우1점수, 배우2점수, 배우3점수)
dat_score_sel$개봉월 = as.factor(dat_score_sel$개봉월)
dat_score_sel$국적 = as.factor(dat_score_sel$국적)
cv.out = cv.glmnet(model.matrix(전국관객수~., train)[,-1], train$전국관객수, alpha=1)
# plot(cv.out)
# cv.out$lambda.min
grid = 10^seq(10,-2,length=100)
lasso.mod=glmnet(model.matrix(전국관객수~., train)[,-1], train$전국관객수, alpha=1, lambda=grid)
# plot(lasso.mod)
# plot(lasso.mod, xvar = 'lambda', label = TRUE)
grid = 10^seq(10,-2,length=100)
model = glmnet(model.matrix(전국관객수~., train)[,-1], train$전국관객수, alpha = 0, lambda = grid)
pred = predict(model, newx = model.matrix(전국관객수~., test)[,-1], s = cv.out$lambda.min)
sqrt(mean((test$전국관객수-pred)**2))
# lasso regression
library(glmnet)
dat_score_sel = dat_score %>% group_by() %>% select(개봉월, 국적, 전국스크린수, 전국관객수, 별점,
감독점수, 제작사점수, 수입사점수, 배우1점수, 배우2점수, 배우3점수)
dat_score_sel$개봉월 = as.factor(dat_score_sel$개봉월)
dat_score_sel$국적 = as.factor(dat_score_sel$국적)
cv.out = cv.glmnet(model.matrix(전국관객수~., train)[,-1], train$전국관객수, alpha=1)
# plot(cv.out)
# cv.out$lambda.min
grid = 10^seq(10,-2,length=100)
lasso.mod=glmnet(model.matrix(전국관객수~., train)[,-1], train$전국관객수, alpha=1, lambda=grid)
# plot(lasso.mod)
# plot(lasso.mod, xvar = 'lambda', label = TRUE)
grid = 10^seq(10,-2,length=100)
model = glmnet(model.matrix(전국관객수~., train)[,-1], train$전국관객수, alpha = 0, lambda = grid)
pred = predict(model, newx = model.matrix(전국관객수~., test)[,-1], s = cv.out$lambda.min)
sqrt(mean((test$전국관객수-pred)**2))
# lasso regression
library(glmnet)
dat_score_sel = dat_score %>% group_by() %>% select(개봉월, 국적, 전국스크린수, 전국관객수, 별점,
감독점수, 제작사점수, 수입사점수, 배우1점수, 배우2점수, 배우3점수)
dat_score_sel$개봉월 = as.factor(dat_score_sel$개봉월)
dat_score_sel$국적 = as.factor(dat_score_sel$국적)
cv.out = cv.glmnet(model.matrix(전국관객수~., train)[,-1], train$전국관객수, alpha=1)
# plot(cv.out)
# cv.out$lambda.min
grid = 10^seq(10,-2,length=100)
lasso.mod=glmnet(model.matrix(전국관객수~., train)[,-1], train$전국관객수, alpha=1, lambda=grid)
# plot(lasso.mod)
# plot(lasso.mod, xvar = 'lambda', label = TRUE)
grid = 10^seq(10,-2,length=100)
model = glmnet(model.matrix(전국관객수~., train)[,-1], train$전국관객수, alpha = 0, lambda = grid)
pred = predict(model, newx = model.matrix(전국관객수~., test)[,-1], s = cv.out$lambda.min)
sqrt(mean((test$전국관객수-pred)**2))
# lasso regression
library(glmnet)
dat_score_sel = dat_score %>% group_by() %>% select(개봉월, 국적, 전국스크린수, 전국관객수, 별점,
감독점수, 제작사점수, 수입사점수, 배우1점수, 배우2점수, 배우3점수)
dat_score_sel$개봉월 = as.factor(dat_score_sel$개봉월)
dat_score_sel$국적 = as.factor(dat_score_sel$국적)
cv.out = cv.glmnet(model.matrix(전국관객수~., train)[,-1], train$전국관객수, alpha=1)
# plot(cv.out)
# cv.out$lambda.min
grid = 10^seq(10,-2,length=100)
lasso.mod=glmnet(model.matrix(전국관객수~., train)[,-1], train$전국관객수, alpha=1, lambda=grid)
# plot(lasso.mod)
# plot(lasso.mod, xvar = 'lambda', label = TRUE)
grid = 10^seq(10,-2,length=100)
model = glmnet(model.matrix(전국관객수~., train)[,-1], train$전국관객수, alpha = 0, lambda = grid)
pred = predict(model, newx = model.matrix(전국관객수~., test)[,-1], s = cv.out$lambda.min)
sqrt(mean((test$전국관객수-pred)**2))
# lasso regression
library(glmnet)
dat_score_sel = dat_score %>% group_by() %>% select(개봉월, 국적, 전국스크린수, 전국관객수, 별점,
감독점수, 제작사점수, 수입사점수, 배우1점수, 배우2점수, 배우3점수)
dat_score_sel$개봉월 = as.factor(dat_score_sel$개봉월)
dat_score_sel$국적 = as.factor(dat_score_sel$국적)
cv.out = cv.glmnet(model.matrix(전국관객수~., train)[,-1], train$전국관객수, alpha=1)
# plot(cv.out)
# cv.out$lambda.min
grid = 10^seq(10,-2,length=100)
lasso.mod=glmnet(model.matrix(전국관객수~., train)[,-1], train$전국관객수, alpha=0, lambda=grid)
# plot(lasso.mod)
# plot(lasso.mod, xvar = 'lambda', label = TRUE)
grid = 10^seq(10,-2,length=100)
model = glmnet(model.matrix(전국관객수~., train)[,-1], train$전국관객수, alpha = 0, lambda = grid)
pred = predict(model, newx = model.matrix(전국관객수~., test)[,-1], s = cv.out$lambda.min)
sqrt(mean((test$전국관객수-pred)**2))
# lasso regression
library(glmnet)
dat_score_sel = dat_score %>% group_by() %>% select(개봉월, 국적, 전국스크린수, 전국관객수, 별점,
감독점수, 제작사점수, 수입사점수, 배우1점수, 배우2점수, 배우3점수)
dat_score_sel$개봉월 = as.factor(dat_score_sel$개봉월)
dat_score_sel$국적 = as.factor(dat_score_sel$국적)
cv.out = cv.glmnet(model.matrix(전국관객수~., train)[,-1], train$전국관객수, alpha=1)
# plot(cv.out)
# cv.out$lambda.min
grid = 10^seq(10,-2,length=100)
lasso.mod=glmnet(model.matrix(전국관객수~., train)[,-1], train$전국관객수, alpha=0, lambda=grid)
# plot(lasso.mod)
# plot(lasso.mod, xvar = 'lambda', label = TRUE)
grid = 10^seq(10,-2,length=100)
model = glmnet(model.matrix(전국관객수~., train)[,-1], train$전국관객수, alpha = 0, lambda = grid)
pred = predict(model, newx = model.matrix(전국관객수~., test)[,-1], s = cv.out$lambda.min)
sqrt(mean((test$전국관객수-pred)**2))
# lasso regression
library(glmnet)
dat_score_sel = dat_score %>% group_by() %>% select(개봉월, 국적, 전국스크린수, 전국관객수, 별점,
감독점수, 제작사점수, 수입사점수, 배우1점수, 배우2점수, 배우3점수)
dat_score_sel$개봉월 = as.factor(dat_score_sel$개봉월)
dat_score_sel$국적 = as.factor(dat_score_sel$국적)
cv.out = cv.glmnet(model.matrix(전국관객수~., train)[,-1], train$전국관객수, alpha=1)
# plot(cv.out)
# cv.out$lambda.min
# plot(lasso.mod)
# plot(lasso.mod, xvar = 'lambda', label = TRUE)
grid = 10^seq(10,-2,length=100)
model = glmnet(model.matrix(전국관객수~., train)[,-1], train$전국관객수, alpha = 0, lambda = grid)
pred = predict(model, newx = model.matrix(전국관객수~., test)[,-1], s = cv.out$lambda.min)
sqrt(mean((test$전국관객수-pred)**2))
# lasso regression
library(glmnet)
dat_score_sel = dat_score %>% group_by() %>% select(개봉월, 국적, 전국스크린수, 전국관객수, 별점,
감독점수, 제작사점수, 수입사점수, 배우1점수, 배우2점수, 배우3점수)
dat_score_sel$개봉월 = as.factor(dat_score_sel$개봉월)
dat_score_sel$국적 = as.factor(dat_score_sel$국적)
cv.out = cv.glmnet(model.matrix(전국관객수~., train)[,-1], train$전국관객수, alpha=0)
# plot(cv.out)
# cv.out$lambda.min
# plot(lasso.mod)
# plot(lasso.mod, xvar = 'lambda', label = TRUE)
grid = 10^seq(10,-2,length=100)
model = glmnet(model.matrix(전국관객수~., train)[,-1], train$전국관객수, alpha = 0, lambda = grid)
pred = predict(model, newx = model.matrix(전국관객수~., test)[,-1], s = cv.out$lambda.min)
sqrt(mean((test$전국관객수-pred)**2))
# lasso regression
library(glmnet)
dat_score_sel = dat_score %>% group_by() %>% select(개봉월, 국적, 전국스크린수, 전국관객수, 별점,
감독점수, 제작사점수, 수입사점수, 배우1점수, 배우2점수, 배우3점수)
dat_score_sel$개봉월 = as.factor(dat_score_sel$개봉월)
dat_score_sel$국적 = as.factor(dat_score_sel$국적)
cv.out = cv.glmnet(model.matrix(전국관객수~., train)[,-1], train$전국관객수, alpha=0)
# plot(cv.out)
# cv.out$lambda.min
# plot(lasso.mod)
# plot(lasso.mod, xvar = 'lambda', label = TRUE)
grid = 10^seq(10,-2,length=100)
model = glmnet(model.matrix(전국관객수~., train)[,-1], train$전국관객수, alpha = 0, lambda = grid)
pred = predict(model, newx = model.matrix(전국관객수~., test)[,-1], s = cv.out$lambda.min)
sqrt(mean((test$전국관객수-pred)**2))
# elastic net
library(glmnet)
dat_score_sel = dat_score %>% group_by() %>% select(개봉월, 국적, 전국스크린수, 전국관객수, 별점,
감독점수, 제작사점수, 수입사점수, 배우1점수, 배우2점수, 배우3점수)
dat_score_sel$개봉월 = as.factor(dat_score_sel$개봉월)
dat_score_sel$국적 = as.factor(dat_score_sel$국적)
cv.out = cv.glmnet(model.matrix(전국관객수~., train)[,-1], train$전국관객수, alpha=0.5)
# plot(cv.out)
# cv.out$lambda.min
grid = 10^seq(10,-2,length=100)
model = glmnet(model.matrix(전국관객수~., train)[,-1], train$전국관객수, alpha = 0.5, lambda = grid)
pred = predict(model, newx = model.matrix(전국관객수~., test)[,-1], s = cv.out$lambda.min)
sqrt(mean((test$전국관객수-pred)**2))
# ridge regression
library(glmnet)
dat_score_sel = dat_score %>% group_by() %>% select(개봉월, 국적, 전국스크린수, 전국관객수, 별점,
감독점수, 제작사점수, 수입사점수, 배우1점수, 배우2점수, 배우3점수)
dat_score_sel$개봉월 = as.factor(dat_score_sel$개봉월)
dat_score_sel$국적 = as.factor(dat_score_sel$국적)
cv.out = cv.glmnet(model.matrix(전국관객수~., train)[,-1], train$전국관객수, alpha=0)
plot(cv.out)
cv.out$lambda.min
grid = 10^seq(10,-2,length=100)
model = glmnet(model.matrix(전국관객수~., train)[,-1], train$전국관객수, alpha = 0, lambda = grid)
pred = predict(model, newx = model.matrix(전국관객수~., test)[,-1], s = cv.out$lambda.min)
sqrt(mean((test$전국관객수-pred)**2))
# ridge regression
library(glmnet)
dat_score_sel = dat_score %>% group_by() %>% select(개봉월, 국적, 전국스크린수, 전국관객수, 별점,
감독점수, 제작사점수, 수입사점수, 배우1점수, 배우2점수, 배우3점수)
dat_score_sel$개봉월 = as.factor(dat_score_sel$개봉월)
dat_score_sel$국적 = as.factor(dat_score_sel$국적)
cv.out = cv.glmnet(model.matrix(전국관객수~., train)[,-1], train$전국관객수, alpha=0)
# plot(cv.out)
# cv.out$lambda.min
grid = 10^seq(10,-2,length=100)
model = glmnet(model.matrix(전국관객수~., train)[,-1], train$전국관객수, alpha = 0, lambda = grid)
pred = predict(model, newx = model.matrix(전국관객수~., test)[,-1], s = cv.out$lambda.min)
sqrt(mean((test$전국관객수-pred)**2))
# lasso regression
library(glmnet)
dat_score_sel = dat_score %>% group_by() %>% select(개봉월, 국적, 전국스크린수, 전국관객수, 별점,
감독점수, 제작사점수, 수입사점수, 배우1점수, 배우2점수, 배우3점수)
dat_score_sel$개봉월 = as.factor(dat_score_sel$개봉월)
dat_score_sel$국적 = as.factor(dat_score_sel$국적)
cv.out = cv.glmnet(model.matrix(전국관객수~., train)[,-1], train$전국관객수, alpha=1)
# plot(cv.out)
# cv.out$lambda.min
# plot(lasso.mod)
# plot(lasso.mod, xvar = 'lambda', label = TRUE)
grid = 10^seq(10,-2,length=100)
model = glmnet(model.matrix(전국관객수~., train)[,-1], train$전국관객수, alpha = 1, lambda = grid)
pred = predict(model, newx = model.matrix(전국관객수~., test)[,-1], s = cv.out$lambda.min)
sqrt(mean((test$전국관객수-pred)**2))
